plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.github.node-gradle.node" version "3.0.1"
}

group = 'org.factoriaf5'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
   // implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
   // implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
   // testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
}

test {
    useJUnitPlatform()
}

task installFrontendDependencies(type: NpmTask) {
    workingDir = file('./web-client')
    args = ['install']
}

task compileWebClient(type: NpmTask) {
    dependsOn("installFrontendDependencies")
    workingDir = file('./web-client')
    args = ['run', 'build']
}

task copyFiles(type: Copy) {
    dependsOn("compileWebClient")
    from('./web-client/build')
    include("*.html")
    include("*.js")
    include("*.css")
    include("*.jpg")
    include("*.svg")
    into("./src/main/resources/static")
}


task buildFrontend(dependsOn: [
        'compileWebClient',
        'copyFiles'
])

build.dependsOn buildFrontend

